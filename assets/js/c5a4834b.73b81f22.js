"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[406],{90687:e=>{e.exports=JSON.parse('{"functions":[{"name":"_FireListeners","desc":"Fires Signal listeners for a component, and subsequentialy, an entity change.","params":[{"name":"component","desc":"","lua_type":"string"},{"name":"id","desc":"","lua_type":"number"},{"name":"oldValue","desc":"","lua_type":"any?"},{"name":"newValue","desc":"","lua_type":"any?"}],"returns":[],"function_type":"method","private":true,"source":{"line":213,"path":"src/World.lua"}},{"name":"_Destroy","desc":"Handles destroy procedures for the given object. This object usually is the old value of a component.","params":[{"name":"object","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","private":true,"source":{"line":229,"path":"src/World.lua"}},{"name":"_Set","desc":"Internally sets a new component value for the given entity, handling destroys and signal firing in the process.","params":[{"name":"component","desc":"","lua_type":"string"},{"name":"id","desc":"","lua_type":"number"},{"name":"value","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","private":true,"source":{"line":246,"path":"src/World.lua"}},{"name":"Query","desc":"Returns a QueryResult based on the given assemblers.","params":[{"name":"...","desc":"","lua_type":"Assembler<any>"}],"returns":[{"desc":"","lua_type":"QueryResult"}],"function_type":"method","source":{"line":269,"path":"src/World.lua"}},{"name":"Has","desc":"Checks if the world contains the requested entity or not.","params":[{"name":"id","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":282,"path":"src/World.lua"}},{"name":"OnChange","desc":"Returns a Signal that fires its listeners on component or entity changes.","params":[{"name":"idOrAssembler","desc":"","lua_type":"number | Assembler<any>"}],"returns":[{"desc":"","lua_type":"Signal"}],"function_type":"method","source":{"line":296,"path":"src/World.lua"}},{"name":"SpawnAt","desc":"Spawns an entity at the given position.","params":[{"name":"id","desc":"","lua_type":"number"},{"name":"...","desc":"","lua_type":"Component<any>"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":325,"path":"src/World.lua"}},{"name":"Spawn","desc":"Spawns an entity with the world\'s next id.","params":[{"name":"...","desc":"","lua_type":"Component<any>"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":368,"path":"src/World.lua"}},{"name":"Despawn","desc":"Despawns a given entity destroying all of its components.","params":[{"name":"id","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":380,"path":"src/World.lua"}},{"name":"Get","desc":"Returns some or all of the components data from the desired entity.","params":[{"name":"id","desc":"","lua_type":"number"},{"name":"...","desc":"If set, the function will return a tuple of components in this order","lua_type":"Assembler<any>?"}],"returns":[{"desc":"","lua_type":"...any | Types.Dictionary<any>"}],"function_type":"method","source":{"line":429,"path":"src/World.lua"}},{"name":"Set","desc":"Sets a new value for the given components.","params":[{"name":"id","desc":"","lua_type":"number"},{"name":"...","desc":"","lua_type":"Component<any>"}],"returns":[],"function_type":"method","source":{"line":463,"path":"src/World.lua"}},{"name":"Update","desc":"Updates existing table components with the new keys from the given components. If the table component does not already exist, this acts just as [World:Set]","params":[{"name":"id","desc":"","lua_type":"number"},{"name":"...","desc":"","lua_type":"Component<{[any] : any}>"}],"returns":[],"function_type":"method","source":{"line":483,"path":"src/World.lua"}},{"name":"Remove","desc":"Removes the given components from the entity.","params":[{"name":"id","desc":"","lua_type":"number"},{"name":"...","desc":"","lua_type":"Assembler<any>"}],"returns":[],"function_type":"method","source":{"line":515,"path":"src/World.lua"}},{"name":"Constructor","desc":":::info Puzzle constructors are special\\nConstructors are returned by the module and called like *local functions* instead of acting like class functions.\\n\\n```lua\\nlocal world = World()\\n```\\n:::","params":[{"name":"destroyProcedures","desc":"","lua_type":"DestroyProcedures?"}],"returns":[{"desc":"","lua_type":"World"}],"function_type":"static","tags":["Constructor"],"source":{"line":557,"path":"src/World.lua"}}],"properties":[{"name":"_destroyProcedures","desc":"","lua_type":"DestroyProcedures","private":true,"readonly":true,"source":{"line":159,"path":"src/Types.lua"}},{"name":"_storage","desc":"","lua_type":"Types.Storage","private":true,"readonly":true,"source":{"line":167,"path":"src/Types.lua"}},{"name":"_missing","desc":"","lua_type":"{true?}","private":true,"readonly":true,"source":{"line":175,"path":"src/Types.lua"}},{"name":"_nextId","desc":"","lua_type":"number","private":true,"readonly":true,"source":{"line":183,"path":"src/Types.lua"}},{"name":"_size","desc":"","lua_type":"number","private":true,"readonly":true,"source":{"line":191,"path":"src/Types.lua"}},{"name":"_isWorld","desc":"","lua_type":"true","tags":["Metatable"],"private":true,"readonly":true,"source":{"line":189,"path":"src/World.lua"}}],"types":[{"name":"Storage","desc":"","lua_type":"{[string]: {[number]: any}}","private":true,"source":{"line":137,"path":"src/Types.lua"}},{"name":"DestroyProcedures","desc":"","lua_type":"{[string]: (object: any, world: World?) -> ()}","source":{"line":148,"path":"src/Types.lua"}}],"name":"World","desc":"Worlds make up the \\"world\\" where entities and components exist.\\n\\n---\\n\\nWorlds offer all the methods for working with *their* entities and components; note the \\"*their*\\" because each world isolates\\nits entities, queries and signals, making it possible to have multiple worlds in your game for completely separate things.","source":{"line":178,"path":"src/World.lua"}}')}}]);